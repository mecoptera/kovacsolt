$flexboxgrid-grid-columns: 12 !default;
$flexboxgrid-breakpoints: sm 48em 46rem, md 62em 61rem, lg 75em 71rem !default;
$flexboxgrid-max-width: 1440px !default;

@mixin col-common {
  box-sizing: border-box;
  flex-grow: 0;
  flex-shrink: 0;
  padding-left: calc(var(--grid-gap) / 2);
  padding-right: calc(var(--grid-gap) / 2);
}

.l-grid {
  box-sizing: border-box;
  display: flex;
  margin: 0 auto;
  max-width: $flexboxgrid-max-width;

  &__container--fluid {
    margin-left: auto;
    margin-right: auto;
    padding-left: calc(var(--grid-gap) * 2);
    padding-right: calc(var(--grid-gap) * 2);
  }

  &__row {
    box-sizing: border-box;
    display: flex;
    flex: 0 1 auto;
    flex-wrap: wrap;
    margin-left: calc(var(--grid-gap) / -2);
    margin-right: calc(var(--grid-gap) / -2);

    &--reverse {
      flex-direction: row-reverse;
    }
  }

  &__col--reverse {
    flex-direction: column-reverse;
  }

  $name: xs;
  &__col--#{$name} {
    @include col-common;

    flex-basis: auto;
  }

  @for $i from 1 through $flexboxgrid-grid-columns {
    &__col--#{$name}-#{$i} {
      @include col-common;
      flex-basis: 100% / $flexboxgrid-grid-columns * $i;
      max-width: 100% / $flexboxgrid-grid-columns * $i;
    }
  }

  @for $i from 0 through $flexboxgrid-grid-columns {
    &__col-#{$name}--offset-#{$i} {
      @include col-common;

      @if $i == 0 {
        margin-left: 0;
      } @else {
        margin-left: 100% / $flexboxgrid-grid-columns * $i;
      }
    }
  }

  &__col-#{$name} {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
  }

  &__start-#{$name} {
    justify-content: flex-start;
    text-align: left;
  }

  &__center-#{$name} {
    justify-content: center;
    text-align: center;
  }

  &__end-#{$name} {
    justify-content: flex-end;
    text-align: right;
  }

  &__top-#{$name} {
    align-items: flex-start;
  }

  &__middle-#{$name} {
    align-items: center;
  }

  &__bottom-#{$name} {
    align-items: flex-end;
  }

  &__around-#{$name} {
    justify-content: space-around;
  }

  &__between-#{$name} {
    justify-content: space-between;
  }

  &__first-#{$name} {
    order: -1;
  }

  &__last-#{$name} {
    order: 1;
  }


  @each $breakpoint in $flexboxgrid-breakpoints {
    $name: nth($breakpoint, 1);
    $size: nth($breakpoint, 2);
    $container: nth($breakpoint, 3);

    @media only screen and (min-width: $size) {
      &__container {
        width: $container;
      }

      &__col-#{$name} {
        @include col-common;

        flex-basis: auto;
      }

      @for $i from 1 through $flexboxgrid-grid-columns {
        &__col-#{$name}-#{$i} {
          @include col-common;

          flex-basis: 100% / $flexboxgrid-grid-columns * $i;
          max-width: 100% / $flexboxgrid-grid-columns * $i;
        }
      }

      @for $i from 0 through $flexboxgrid-grid-columns {
        &__col-#{$name}--offset-#{$i} {
          @include col-common;
          @if $i == 0 {
            margin-left: 0;
          } @else {
            margin-left: 100% / $flexboxgrid-grid-columns * $i;
          }
        }
      }

      &__col-#{$name} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }

      &__start-#{$name} {
        justify-content: flex-start;
        text-align: left;
      }

      &__center-#{$name} {
        justify-content: center;
        text-align: center;
      }

      &__end-#{$name} {
        justify-content: flex-end;
        text-align: right;
      }

      &__top-#{$name} {
        align-items: flex-start;
      }

      &__middle-#{$name} {
        align-items: center;
      }

      &__bottom-#{$name} {
        align-items: flex-end;
      }

      &__around-#{$name} {
        justify-content: space-around;
      }

      &__between-#{$name} {
        justify-content: space-between;
      }

      &__first-#{$name} {
        order: -1;
      }

      &__last-#{$name} {
        order: 1;
      }
    }
  }
}
